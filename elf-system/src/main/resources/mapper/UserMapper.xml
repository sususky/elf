<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.su.elf.system.mapper.UserMapper" >
    <resultMap id="baseUserMap" type="com.su.elf.system.entity.User" >
        <id column="id" property="id" />
        <result column="avatar_url" property="avatarUrl" />
        <result column="is_super" property="isSuper" />
        <result column="create_time" property="createTime" />
    </resultMap>
    
    <sql id="base_Column_List" >
        id, username, nickname, password, phone, avatar_url, gender, is_super_admin, is_readonly, create_time
    </sql>

    <select id="getList" resultMap="baseUserMap" parameterType="com.su.elf.common.entity.SearchParam" >
        SELECT <include refid="base_Column_List" /> FROM sys_user where 1=1
        <if test="name!=null and name!='' " >
            AND username = #{name}
        </if>
        <if test="phone!=null and phone!='' " >
            AND phone = #{phone}
        </if>
        <if test="startTime!=null and startTime!=''">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            AND create_time &lt;= #{endTime}
        </if>
        limit #{limit} offset #{offset}
    </select>

    <select id="getCount" resultType="int" parameterType="com.su.elf.common.entity.SearchParam" >
        SELECT count(*) FROM sys_user where 1=1
        <if test="name!=null and name!='' " >
            AND username = #{name}
        </if>
        <if test="phone!=null and phone!='' " >
            AND phone = #{phone}
        </if>
        <if test="startTime!=null and startTime!=''">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            AND create_time &lt;= #{endTime}
        </if>
    </select>

    <select id="get" parameterType="int" resultMap="baseUserMap" >
      SELECT
       <include refid="base_Column_List" />
	  FROM sys_user WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="com.su.elf.system.entity.User" useGeneratedKeys="true" keyProperty="id">
      INSERT INTO sys_user(username, nickname, password, gender, create_time)
      VALUES (#{username}, #{nickname}, #{password}, #{gender}, now())
    </insert>
    
    <update id="update" parameterType="com.su.elf.system.entity.User" >
        UPDATE sys_user SET
        <trim  suffixOverrides=",">
            <if test="username!=null and username!='' ">
                username = #{username},
            </if>
            <if test="nickname!=null and nickname!='' ">
                nickname = #{nickname},
            </if>
            <if test="password!=null and password!='' ">
                password = #{password},
            </if>
            <if test="phone!=null and phone!='' ">
                phone = #{phone},
            </if>
            <if test="gender>0 ">
                gender = #{gender},
            </if>
            <if test="readonly>0 ">
                is_readonly = #{readonly},
            </if>
        </trim>
       WHERE id = #{id}
    </update>
    
    <delete id="delete" parameterType="int" >
       DELETE FROM sys_user WHERE id =#{id}
    </delete>

    <select id="getByName" parameterType="String" resultMap="baseUserMap" >
        SELECT <include refid="base_Column_List" />
        FROM sys_user WHERE username = #{username}
    </select>

</mapper>
